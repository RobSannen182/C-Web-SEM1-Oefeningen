// <auto-generated />
using MVCTagHelper.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVCTagHelper.Migrations
{
    [DbContext(typeof(TagHelperDbContext))]
    [Migration("20211020080441_medewerkersAdded")]
    partial class medewerkersAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MVCTagHelper.Models.Afdeling", b =>
                {
                    b.Property<int>("AfdelingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AfdelingNaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocatieId")
                        .HasColumnType("int");

                    b.HasKey("AfdelingId");

                    b.HasIndex("LocatieId");

                    b.ToTable("Afdelingen");
                });

            modelBuilder.Entity("MVCTagHelper.Models.Land", b =>
                {
                    b.Property<int>("LandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LandCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandNaam")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LandId");

                    b.ToTable("Landen");
                });

            modelBuilder.Entity("MVCTagHelper.Models.Locatie", b =>
                {
                    b.Property<int>("LocatieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LandId")
                        .HasColumnType("int");

                    b.Property<string>("Stad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocatieId");

                    b.HasIndex("LandId");

                    b.ToTable("Locaties");
                });

            modelBuilder.Entity("MVCTagHelper.Models.Medewerker", b =>
                {
                    b.Property<int>("MedewerkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AfdelingId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voornaam")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedewerkerId");

                    b.HasIndex("AfdelingId");

                    b.ToTable("Medewerkers");
                });

            modelBuilder.Entity("MVCTagHelper.Models.Afdeling", b =>
                {
                    b.HasOne("MVCTagHelper.Models.Locatie", "Locatie")
                        .WithMany("Afdelingen")
                        .HasForeignKey("LocatieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVCTagHelper.Models.Locatie", b =>
                {
                    b.HasOne("MVCTagHelper.Models.Land", "Land")
                        .WithMany("Locaties")
                        .HasForeignKey("LandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVCTagHelper.Models.Medewerker", b =>
                {
                    b.HasOne("MVCTagHelper.Models.Afdeling", "Afdeling")
                        .WithMany()
                        .HasForeignKey("AfdelingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
